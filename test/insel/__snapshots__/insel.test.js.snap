// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The textbook tests compiles test/testcases/merge.tig correctly 1`] = `
"
val it = true : bool
test/testcases/merge.tig:54.5:Variable undefined
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      MEM(
       BINOP(PLUS,
        CONST 0,
        CONST 92)),
      CALL(
       NAME L3,
        CONST 0)),
     CONST 0)),
   EXP(
    ESEQ(
     SEQ(
      LABEL L12,
      MOVE(
       TEMP t101,
       ESEQ(
        SEQ(
         EXP(
          ESEQ(
           MOVE(
            MEM(
             BINOP(PLUS,
              CONST 0,
              CONST 88)),
            CONST 0),
           CONST 0)),
         EXP(
          ESEQ(
           SEQ(
            LABEL L13,
            MOVE(
             TEMP t101,
             ESEQ(
              SEQ(
               CJUMP(GE,
                CALL(
                 NAME L4,
                  CONST 0,
                  MEM(
                   BINOP(PLUS,
                    CONST 0,
                    CONST 92))),
                CALL(
                 NAME L4,
                  CONST 0,
                  NAME L39),
                L50,L51),
               LABEL L50,
               MOVE(
                TEMP t134,
                ESEQ(
                 SEQ(
                  MOVE(
                   TEMP t133,
                   CONST 1),
                  CJUMP(LE,
                   CALL(
                    NAME L4,
                     CONST 0,
                     MEM(
                      BINOP(PLUS,
                       CONST 0,
                       CONST 92))),
                   CALL(
                    NAME L4,
                     CONST 0,
                     NAME L45),
                   L48,L49),
                  LABEL L49,
                  MOVE(
                   TEMP t133,
                   CONST 0),
                  LABEL L48,
),
                 TEMP t133)),
               JUMP(
                NAME L52),
               LABEL L51,
               MOVE(
                TEMP t134,
                CONST 0),
               JUMP(
                NAME L52),
               LABEL L52,
),
              TEMP t134)),
            JUMP(
             TEMP t128),
),
           CONST 0)),
),
        MEM(
         BINOP(PLUS,
          CONST 0,
          CONST 88)))),
      JUMP(
       TEMP t128),
),
     CONST 0)),
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     SEQ(
      LABEL L64,
      MOVE(
       TEMP t101,
       ESEQ(
        SEQ(
         EXP(
          ESEQ(
           MOVE(
            TEMP t153,
            ESEQ(
             SEQ(
              MOVE(
               TEMP t152,
               CALL(
                NAME malloc,
                 BINOP(MUL,
                  CONST 1,
                  CONST 4))),
              MOVE(
               MEM(
                BINOP(PLUS,
                 TEMP t152,
                 CONST 0)),
               CONST 0),
),
             TEMP t152)),
           CONST 0)),
         EXP(
          ESEQ(
           MOVE(
            TEMP t154,
            CALL(
             NAME L12,
              CONST 0,
              TEMP t153)),
           CONST 0)),
),
        ESEQ(
         SEQ(
          CJUMP(EQ,
           MEM(
            BINOP(PLUS,
             TEMP t153,
             BINOP(MUL,
              CONST 0,
              CONST 4))),
           CONST 1,
           L114,L115),
          LABEL L114,
          MOVE(
           TEMP t156,
           ESEQ(
            SEQ(
             MOVE(
              TEMP t155,
              CALL(
               NAME malloc,
                BINOP(MUL,
                 CONST 2,
                 CONST 4))),
             MOVE(
              MEM(
               BINOP(PLUS,
                TEMP t155,
                CONST 0)),
              TEMP t154),
             MOVE(
              MEM(
               BINOP(PLUS,
                TEMP t155,
                CONST 4)),
              CALL(
               NAME L64,
                CONST 0)),
),
            TEMP t155)),
          JUMP(
           NAME L116),
          LABEL L115,
          MOVE(
           TEMP t156,
           CONST 0),
          JUMP(
           NAME L116),
          LABEL L116,
),
         TEMP t156))),
      JUMP(
       TEMP t128),
),
     CONST 0)),
   EXP(
    ESEQ(
     MOVE(
      TEMP t157,
      CALL(
       NAME L64,
        CONST 0)),
     CONST 0)),
   EXP(
    ESEQ(
     MOVE(
      TEMP t158,
      CALL(
       NAME L64,
        CONST 0)),
     CONST 0)),
),
  CONST 0))
emit L11

uncaught exception Subscript [subscript out of bounds]
  raised at: Basis/Implementation/list.sml:67.35-67.44
             main.sml:28.46
- 
"
`;

exports[`The textbook tests compiles test/testcases/queens.tig correctly 1`] = `
"
val it = true : bool
test/testcases/queens.tig:32.5:Variable undefined
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     MOVE(
      MEM(
       BINOP(PLUS,
        CONST 0,
        CONST 92)),
      CONST 8),
     CONST 0)),
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      MEM(
       BINOP(PLUS,
        CONST 0,
        CONST 88)),
      CALL(
       NAME initArray,
        MEM(
         BINOP(PLUS,
          CONST 0,
          CONST 92)),
        CONST 0)),
     CONST 0)),
   EXP(
    ESEQ(
     MOVE(
      MEM(
       BINOP(PLUS,
        CONST 0,
        CONST 84)),
      CALL(
       NAME initArray,
        MEM(
         BINOP(PLUS,
          CONST 0,
          CONST 92)),
        CONST 0)),
     CONST 0)),
   EXP(
    ESEQ(
     MOVE(
      MEM(
       BINOP(PLUS,
        CONST 0,
        CONST 80)),
      CALL(
       NAME initArray,
        BINOP(MINUS,
         BINOP(PLUS,
          MEM(
           BINOP(PLUS,
            CONST 0,
            CONST 92)),
          MEM(
           BINOP(PLUS,
            CONST 0,
            CONST 92))),
         CONST 1),
        CONST 0)),
     CONST 0)),
   EXP(
    ESEQ(
     MOVE(
      MEM(
       BINOP(PLUS,
        CONST 0,
        CONST 76)),
      CALL(
       NAME initArray,
        BINOP(MINUS,
         BINOP(PLUS,
          MEM(
           BINOP(PLUS,
            CONST 0,
            CONST 92)),
          MEM(
           BINOP(PLUS,
            CONST 0,
            CONST 92))),
         CONST 1),
        CONST 0)),
     CONST 0)),
   EXP(
    ESEQ(
     SEQ(
      LABEL L12,
      MOVE(
       TEMP t101,
       CALL(
        NAME L1,
         CONST 0,
         NAME L61)),
      JUMP(
       TEMP t128),
),
     CONST 0)),
),
  CONST 0))
emit L11

uncaught exception Subscript [subscript out of bounds]
  raised at: Basis/Implementation/list.sml:67.35-67.44
             main.sml:28.46
- 
"
`;

exports[`The textbook tests compiles test/testcases/test1.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CALL(
       NAME initArray,
        CONST 10,
        CONST 0)),
     CONST 0)),
),
  TEMP t129))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test2.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CALL(
       NAME initArray,
        CONST 10,
        CONST 0)),
     CONST 0)),
),
  TEMP t129))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test3.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t130,
      ESEQ(
       SEQ(
        MOVE(
         TEMP t129,
         CALL(
          NAME malloc,
           BINOP(MUL,
            CONST 2,
            CONST 4))),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t129,
           CONST 0)),
         NAME L13),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t129,
           CONST 4)),
         CONST 1000),
),
       TEMP t129)),
     CONST 0)),
),
  TEMP t130))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test4.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     SEQ(
      LABEL L12,
      MOVE(
       TEMP t101,
       ESEQ(
        SEQ(
         CJUMP(EQ,
          TEMP t130,
          CONST 0,
          L13,L14),
         LABEL L13,
         MOVE(
          TEMP t131,
          CONST 1),
         JUMP(
          NAME L15),
         LABEL L14,
         MOVE(
          TEMP t131,
          BINOP(MUL,
           TEMP t130,
           CALL(
            NAME L12,
             CONST 0,
             BINOP(MINUS,
              TEMP t130,
              CONST 1)))),
         JUMP(
          NAME L15),
         LABEL L15,
),
        TEMP t131)),
      JUMP(
       TEMP t128),
),
     CONST 0)),
),
  CALL(
   NAME L12,
    CONST 0,
    CONST 10)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test5.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t130,
      ESEQ(
       SEQ(
        MOVE(
         TEMP t129,
         CALL(
          NAME malloc,
           BINOP(MUL,
            CONST 2,
            CONST 4))),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t129,
           CONST 0)),
         CONST 0),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t129,
           CONST 4)),
         CONST 0),
),
       TEMP t129)),
     CONST 0)),
),
  TEMP t130))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test6.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     SEQ(
      LABEL L12,
      MOVE(
       TEMP t101,
       CALL(
        NAME L13,
         CONST 0,
         BINOP(PLUS,
          TEMP t132,
          CONST 1))),
      JUMP(
       TEMP t128),
),
     CONST 0)),
),
  CALL(
   NAME L12,
    CONST 0,
    CONST 0,
    NAME L17)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test7.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     SEQ(
      LABEL L12,
      MOVE(
       TEMP t101,
       CONST 0),
      JUMP(
       TEMP t128),
),
     CONST 0)),
),
  CALL(
   NAME L12,
    CONST 0,
    CONST 0,
    NAME L18)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test8.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   CJUMP(GT,
    CONST 10,
    CONST 20,
    L12,L13),
   LABEL L12,
   MOVE(
    TEMP t129,
    CONST 30),
   JUMP(
    NAME L14),
   LABEL L13,
   MOVE(
    TEMP t129,
    CONST 40),
   JUMP(
    NAME L14),
   LABEL L14,
),
  TEMP t129))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test9.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test9.tig:3.1:Then Else disagree
EXP(
 ESEQ(
  SEQ(
   CJUMP(GT,
    CONST 5,
    CONST 4,
    L13,L14),
   LABEL L13,
   MOVE(
    TEMP t129,
    CONST 13),
   JUMP(
    NAME L15),
   LABEL L14,
   MOVE(
    TEMP t129,
    NAME L12),
   JUMP(
    NAME L15),
   LABEL L15,
),
  TEMP t129))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test10.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test10.tig:2.1:while loop must be unit
SEQ(
 LABEL L14,
 CJUMP(GT,
  CONST 10,
  CONST 5,
  L13,L12),
 LABEL L13,
 EXP(
  BINOP(PLUS,
   CONST 5,
   CONST 6)),
 JUMP(
  NAME L14),
 LABEL L12,
)
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test11.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test11.tig:2.1:Not int type
test/testcases/test11.tig:2.1:Bad types for comparison operator
test/testcases/test11.tig:2.1:Bad types for comparison operator
test/testcases/test11.tig:2.1:Bad types for comparison operator
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     MOVE(
      TEMP t130,
      CONST 10),
     CONST 0)),
),
  ESEQ(
   SEQ(
    LABEL L21,
    CJUMP(EQ,
     CONST 0,
     CONST 1,
     L20,L18),
    LABEL L20,
    MOVE(
     TEMP t130,
     BINOP(PLUS,
      TEMP t130,
      CONST 1)),
    JUMP(
     NAME L21),
    LABEL L18,
),
   CONST 0)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test12.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     MOVE(
      MEM(
       BINOP(PLUS,
        CONST 0,
        CONST 92)),
      CONST 0),
     CONST 0)),
),
  ESEQ(
   SEQ(
    EXP(
     ESEQ(
      MOVE(
       TEMP t130,
       CONST 0),
      CONST 0)),
),
   ESEQ(
    SEQ(
     LABEL L17,
     CJUMP(LE,
      TEMP t130,
      CONST 100,
      L16,L15),
     LABEL L16,
     MOVE(
      TEMP t130,
      BINOP(PLUS,
       TEMP t130,
       CONST 1)),
     JUMP(
      NAME L17),
     LABEL L15,
),
    CONST 0))))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test13.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test13.tig:3.3:Bad types for comparison operator
EXP(
 CONST 0)
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test14.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test14.tig:12.9:Bad types for comparison operator
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t130,
      ESEQ(
       SEQ(
        MOVE(
         TEMP t129,
         CALL(
          NAME malloc,
           BINOP(MUL,
            CONST 2,
            CONST 4))),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t129,
           CONST 0)),
         NAME L13),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t129,
           CONST 4)),
         CONST 0),
),
       TEMP t129)),
     CONST 0)),
   EXP(
    ESEQ(
     MOVE(
      TEMP t131,
      CALL(
       NAME initArray,
        CONST 3,
        CONST 0)),
     CONST 0)),
),
  ESEQ(
   SEQ(
    CJUMP(EQ,
     CONST 0,
     CONST 1,
     L14,L15),
    LABEL L14,
    MOVE(
     TEMP t132,
     CONST 3),
    JUMP(
     NAME L16),
    LABEL L15,
    MOVE(
     TEMP t132,
     CONST 4),
    JUMP(
     NAME L16),
    LABEL L16,
),
   TEMP t132)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test15.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test15.tig:3.1:If returns non-unit
EXP(
 ESEQ(
  SEQ(
   CJUMP(EQ,
    CONST 20,
    CONST 1,
    L12,L13),
   LABEL L12,
   MOVE(
    TEMP t129,
    CONST 3),
   JUMP(
    NAME L14),
   LABEL L13,
   MOVE(
    TEMP t129,
    CONST 0),
   JUMP(
    NAME L14),
   LABEL L14,
),
  TEMP t129))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test16.tig correctly 1`] = `
"
val it = true : bool

uncaught exception CycleInTypeDec
  raised at: semant.sml:251.137-251.151
- 
"
`;

exports[`The textbook tests compiles test/testcases/test17.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test17.tig:4.23:Type undefined
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CONST 0),
     CONST 0)),
   EXP(
    CONST 0),
),
  TEMP t129))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test18.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test18.tig:5.4:Variable undefined
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     SEQ(
      LABEL L12,
      MOVE(
       TEMP t101,
       CONST 0),
      JUMP(
       TEMP t128),
),
     CONST 0)),
   EXP(
    ESEQ(
     MOVE(
      TEMP t133,
      CONST 0),
     CONST 0)),
   EXP(
    ESEQ(
     SEQ(
      LABEL L13,
      MOVE(
       TEMP t101,
       NAME L16),
      JUMP(
       TEMP t128),
),
     CONST 0)),
),
  CALL(
   NAME L12,
    CONST 0,
    CONST 0,
    NAME L18)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test19.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     SEQ(
      LABEL L12,
      MOVE(
       TEMP t101,
       CONST 0),
      JUMP(
       TEMP t128),
),
     CONST 0)),
),
  CALL(
   NAME L12,
    CONST 0,
    CONST 0,
    NAME L18)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test20.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test20.tig:3.18:Variable i does not exist!
test/testcases/test20.tig:3.18:Variable i does not exist!
test/testcases/test20.tig:3.19:Not int type
test/testcases/test20.tig:3.18:Variable i does not exist!
test/testcases/test20.tig:3.18:Variable i does not exist!
SEQ(
 LABEL L14,
 CJUMP(GT,
  CONST 10,
  CONST 5,
  L13,L12),
 LABEL L13,
 EXP(
  CONST 0),
 JUMP(
  NAME L14),
 LABEL L12,
)
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test21.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test21.tig:8.11:Not int type
test/testcases/test21.tig:5.1:function body and return type differ
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     SEQ(
      LABEL L12,
      MOVE(
       TEMP t101,
       ESEQ(
        SEQ(
         CJUMP(EQ,
          TEMP t130,
          CONST 0,
          L13,L14),
         LABEL L13,
         MOVE(
          TEMP t131,
          CONST 1),
         JUMP(
          NAME L15),
         LABEL L14,
         MOVE(
          TEMP t131,
          BINOP(MUL,
           TEMP t130,
           CALL(
            NAME L12,
             CONST 0,
             BINOP(MINUS,
              TEMP t130,
              CONST 1)))),
         JUMP(
          NAME L15),
         LABEL L15,
),
        TEMP t131)),
      JUMP(
       TEMP t128),
),
     CONST 0)),
),
  CALL(
   NAME L12,
    CONST 0,
    CONST 10)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test22.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test22.tig:7.2:unrecognized field
test/testcases/test22.tig:7.11:Assigning wrong type to variable
test/testcases/test22.tig:7.2:unrecognized field
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t130,
      ESEQ(
       SEQ(
        MOVE(
         TEMP t129,
         CALL(
          NAME malloc,
           BINOP(MUL,
            CONST 2,
            CONST 4))),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t129,
           CONST 0)),
         NAME L13),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t129,
           CONST 4)),
         CONST 0),
),
       TEMP t129)),
     CONST 0)),
),
  ESEQ(
   MOVE(
    CONST 0,
    NAME L15),
   CONST 0)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test23.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test23.tig:7.12:Assigning wrong type to variable
test/testcases/test23.tig:8.10:Assigning wrong type to variable
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t130,
      ESEQ(
       SEQ(
        MOVE(
         TEMP t129,
         CALL(
          NAME malloc,
           BINOP(MUL,
            CONST 2,
            CONST 4))),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t129,
           CONST 0)),
         NAME L13),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t129,
           CONST 4)),
         CONST 0),
),
       TEMP t129)),
     CONST 0)),
),
  ESEQ(
   MOVE(
    MEM(
     BINOP(PLUS,
      TEMP t130,
      BINOP(MUL,
       CONST 1,
       CONST 4))),
    NAME L15),
   CONST 0)))
emit L11

uncaught exception Subscript [subscript out of bounds]
  raised at: Basis/Implementation/list.sml:67.35-67.44
             main.sml:28.46
- 
"
`;

exports[`The textbook tests compiles test/testcases/test24.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test24.tig:5.2:subscript var on non-array type
test/testcases/test24.tig:5.2:subscript var on non-array type
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CONST 0),
     CONST 0)),
),
  CONST 0))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test25.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test25.tig:5.2:field var on non-record type
test/testcases/test25.tig:5.2:field var on non-record type
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CONST 0),
     CONST 0)),
),
  CONST 0))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test26.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test26.tig:3.3:Not int type
EXP(
 BINOP(PLUS,
  CONST 3,
  NAME L13))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test27.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CONST 0),
     CONST 0)),
   EXP(
    ESEQ(
     SEQ(
      LABEL L12,
      MOVE(
       TEMP t101,
       TEMP t131),
      JUMP(
       TEMP t128),
),
     CONST 0)),
),
  CALL(
   NAME L12,
    CONST 0,
    CONST 2)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test28.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test28.tig:7.21:named type does not match expression
test/testcases/test28.tig:9.2:Variable rec1 does not exist!
test/testcases/test28.tig:9.2:Variable rec1 does not exist!
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t130,
      ESEQ(
       SEQ(
        MOVE(
         TEMP t129,
         CALL(
          NAME malloc,
           BINOP(MUL,
            CONST 2,
            CONST 4))),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t129,
           CONST 0)),
         NAME L13),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t129,
           CONST 4)),
         CONST 0),
),
       TEMP t129)),
     CONST 0)),
),
  CONST 0))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test29.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test29.tig:7.21:named type does not match expression
test/testcases/test29.tig:9.2:Variable arr1 does not exist!
test/testcases/test29.tig:9.2:Variable arr1 does not exist!
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CALL(
       NAME initArray,
        CONST 10,
        CONST 0)),
     CONST 0)),
),
  CONST 0))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test30.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CALL(
       NAME initArray,
        CONST 10,
        CONST 0)),
     CONST 0)),
),
  MEM(
   BINOP(PLUS,
    TEMP t129,
    BINOP(MUL,
     CONST 2,
     CONST 4)))))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test31.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test31.tig:3.12:named type does not match expression
test/testcases/test31.tig:5.2:Variable a does not exist!
test/testcases/test31.tig:5.2:Variable a does not exist!
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      NAME L12),
     CONST 0)),
),
  CONST 0))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test32.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test32.tig:6.11:Initializing array with wrong type
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CALL(
       NAME initArray,
        CONST 10,
        NAME L13)),
     CONST 0)),
),
  CONST 0))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test33.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test33.tig:3.10:Type undefined
test/testcases/test33.tig:3.10:Assigning record to not record type
test/testcases/test33.tig:3.7:assigning nil to non-record
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CONST 0),
     CONST 0)),
),
  CONST 0))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test34.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test34.tig:5.2:Argument type mismatch
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     SEQ(
      LABEL L12,
      MOVE(
       TEMP t101,
       TEMP t132),
      JUMP(
       TEMP t128),
),
     CONST 0)),
),
  CALL(
   NAME L12,
    CONST 0,
    NAME L15,
    NAME L16)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test35.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test35.tig:5.2:Argument type mismatch
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     SEQ(
      LABEL L12,
      MOVE(
       TEMP t101,
       TEMP t132),
      JUMP(
       TEMP t128),
),
     CONST 0)),
),
  CALL(
   NAME L12,
    CONST 0,
    NAME L14)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test36.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test36.tig:5.2:Too many arguments
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     SEQ(
      LABEL L12,
      MOVE(
       TEMP t101,
       TEMP t132),
      JUMP(
       TEMP t128),
),
     CONST 0)),
),
  CALL(
   NAME L12,
    CONST 0,
    CONST 3,
    NAME L14,
    CONST 5)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test37.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CONST 0),
     CONST 0)),
   EXP(
    ESEQ(
     MOVE(
      TEMP t130,
      NAME L12),
     CONST 0)),
),
  CONST 0))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test38.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test38.tig:5.2:repeated type name in typedec
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
),
  CONST 0))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test39.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test39.tig:6.2:function declared twice in same fundec
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     SEQ(
      LABEL L12,
      MOVE(
       TEMP t101,
       TEMP t130),
      JUMP(
       TEMP t128),
),
     CONST 0)),
),
  CONST 0))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test40.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test40.tig:3.2:function body and return type differ
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     SEQ(
      LABEL L12,
      MOVE(
       TEMP t101,
       TEMP t130),
      JUMP(
       TEMP t128),
),
     CONST 0)),
),
  CALL(
   NAME L12,
    CONST 0,
    CONST 2)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test41.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
),
  ESEQ(
   SEQ(
    EXP(
     CONST 0),
),
   CONST 0)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test42.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CALL(
       NAME initArray,
        CONST 10,
        CONST 0)),
     CONST 0)),
   EXP(
    ESEQ(
     MOVE(
      TEMP t132,
      CALL(
       NAME initArray,
        CONST 5,
        ESEQ(
         SEQ(
          MOVE(
           TEMP t131,
           CALL(
            NAME malloc,
             BINOP(MUL,
              CONST 4,
              CONST 4))),
          MOVE(
           MEM(
            BINOP(PLUS,
             TEMP t131,
             CONST 0)),
           NAME L18),
          MOVE(
           MEM(
            BINOP(PLUS,
             TEMP t131,
             CONST 4)),
           NAME L19),
          MOVE(
           MEM(
            BINOP(PLUS,
             TEMP t131,
             CONST 8)),
           CONST 0),
          MOVE(
           MEM(
            BINOP(PLUS,
             TEMP t131,
             CONST 12)),
           CONST 0),
),
         TEMP t131))),
     CONST 0)),
   EXP(
    ESEQ(
     MOVE(
      TEMP t133,
      CALL(
       NAME initArray,
        CONST 100,
        NAME L21)),
     CONST 0)),
   EXP(
    ESEQ(
     MOVE(
      TEMP t135,
      ESEQ(
       SEQ(
        MOVE(
         TEMP t134,
         CALL(
          NAME malloc,
           BINOP(MUL,
            CONST 4,
            CONST 4))),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t134,
           CONST 0)),
         NAME L24),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t134,
           CONST 4)),
         NAME L25),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t134,
           CONST 8)),
         CONST 2432),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t134,
           CONST 12)),
         CONST 44),
),
       TEMP t134)),
     CONST 0)),
   EXP(
    ESEQ(
     MOVE(
      TEMP t137,
      ESEQ(
       SEQ(
        MOVE(
         TEMP t136,
         CALL(
          NAME malloc,
           BINOP(MUL,
            CONST 2,
            CONST 4))),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t136,
           CONST 0)),
         NAME L27),
        MOVE(
         MEM(
          BINOP(PLUS,
           TEMP t136,
           CONST 4)),
         CALL(
          NAME initArray,
           CONST 3,
           CONST 1900)),
),
       TEMP t136)),
     CONST 0)),
),
  ESEQ(
   MOVE(
    MEM(
     BINOP(PLUS,
      BINOP(PLUS,
       TEMP t137,
       BINOP(MUL,
        CONST 1,
        CONST 4)),
      BINOP(MUL,
       CONST 2,
       CONST 4))),
    CONST 2323),
   CONST 0)))
emit L11

uncaught exception Subscript [subscript out of bounds]
  raised at: Basis/Implementation/list.sml:67.35-67.44
             main.sml:28.46
- 
"
`;

exports[`The textbook tests compiles test/testcases/test43.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test43.tig:6.4:Not int type
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CONST 0),
     CONST 0)),
),
  BINOP(PLUS,
   TEMP t129,
   CONST 3)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test44.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CONST 0),
     CONST 0)),
),
  ESEQ(
   MOVE(
    TEMP t129,
    CONST 0),
   CONST 0)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test45.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test45.tig:5.7:assigning nil to non-record
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CONST 0),
     CONST 0)),
),
  TEMP t129))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test46.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CONST 0),
     CONST 0)),
),
  ESEQ(
   SEQ(
    MOVE(
     TEMP t130,
     CONST 1),
    CJUMP(NE,
     TEMP t129,
     CONST 0,
     L12,L13),
    LABEL L13,
    MOVE(
     TEMP t130,
     CONST 0),
    LABEL L12,
),
   TEMP t130)))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test47.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      CONST 4),
     CONST 0)),
   EXP(
    CONST 0),
),
  CONST 0))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test48.tig correctly 1`] = `
"
val it = true : bool
EXP(
 ESEQ(
  SEQ(
   EXP(
    ESEQ(
     SEQ(
      LABEL L12,
      MOVE(
       TEMP t101,
       TEMP t130),
      JUMP(
       TEMP t128),
),
     CONST 0)),
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     SEQ(
      LABEL L13,
      MOVE(
       TEMP t101,
       TEMP t132),
      JUMP(
       TEMP t128),
),
     CONST 0)),
),
  CONST 0))
emit L11
val it = () : unit

"
`;

exports[`The textbook tests compiles test/testcases/test49.tig correctly 1`] = `
"
val it = true : bool
test/testcases/test49.tig:5.18:syntax error: inserting  PLUS
test/testcases/test49.tig:5.10:Variable rectype does not exist!
test/testcases/test49.tig:5.10:Variable rectype does not exist!
test/testcases/test49.tig:5.18:Not int type
test/testcases/test49.tig:5.18:Not int type
test/testcases/test49.tig:5.10:Variable rectype does not exist!
test/testcases/test49.tig:5.10:Variable rectype does not exist!
EXP(
 ESEQ(
  SEQ(
   EXP(
    CONST 0),
   EXP(
    ESEQ(
     MOVE(
      TEMP t129,
      BINOP(PLUS,
       CONST 0,
       CONST 0)),
     CONST 0)),
),
  TEMP t129))
emit L11
val it = () : unit

"
`;
